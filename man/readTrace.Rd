% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/readTrace.R
\name{readTrace}
\alias{readTrace}
\title{Read trace}
\usage{
readTrace(
  paths,
  format = "simple",
  delim = "\\t",
  burnin = 0.1,
  check.names = FALSE,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{paths}{(vector of character strings; no default) File path(s) to trace
file.}

\item{format}{(single character string; default = "simple") Indicates type of
MCMC trace, complex indicates cases where trace contains vectors of vectors/
matrices - mnStochasticVariable monitor will sometimes be of this type. When
`format = "json"`, the log will be parsed as a JSON file.}

\item{delim}{(single character string; default = "\\t") Delimiter of file.}

\item{burnin}{(single numeric value; default = 0.1) Fraction of generations
to discard (if value provided is between 0 and 1) or number of generations
(if value provided is greater than 1).}

\item{check.names}{(logical; default = FALSE) Passed to utils::read.table();
indicates if utils::read.table() should check column names and replace
syntactically invalid characters.}

\item{verbose}{(logical; default = TRUE) Print status of reading traces 
to screen.}

\item{...}{(various) Additional arguments passed to utils::read.table().}
}
\value{
List of dataframes (of length 1 if only 1 log file provided).
}
\description{
Reads in MCMC log files
}
\details{
Reads in one or multiple MCMC log files from the same analysis
and discards a user-specified burn-in, compatible with multiple monitor
types. If the trace contains vectors of vectors and the user does not specify
format = "complex", readTrace() will read in those columns as factors
rather than as numeric vectors.
}
\examples{
\donttest{
# Create dummy data
temp_file1 <- tempfile(fileext = ".log")
temp_file2 <- tempfile(fileext = ".log")
write.table(data.frame(a = 1:10, b = 11:20), file = temp_file1, sep = "\t", row.names = FALSE)
write.table(data.frame(a = 21:30, b = 31:40), file = temp_file2, sep = "\t", row.names = FALSE)

# How to call the function
output <- readTrace(paths = c(temp_file1, temp_file2),
                    format = "simple",
                    delim = "\\\\t",
                    burnin = 0.1,
                    check.names = FALSE)

# Clean up temporary files
file.remove(temp_file1, temp_file2)
}

}
